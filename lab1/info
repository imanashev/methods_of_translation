
Порождающая грамматика G определяется четверкой
 	G = { T, N, P, S }, где 
T  - множество основных или терминальных символов (лексемы),
N – множество нетерминальных символов (понятия),
P – множество правил вида
    α  -> β, где α ∈(T U N)*/T*,  β∈ (T U N)*,
    которые называются порождающимиправилами или правилами вывода,
 S – начальный символ грамматики, ∈ N.

Алтернатива - несколько правил с одинаковой левой частью, но разными правыми
Множество терминальных символов T = {!, +, *, (, ), И}, 
    И – условное обозначение лексемы ‘Идентификатор’, 
    ! – ограничителя выражения множество нетерминальных символов 
N = {A, B, T, M}, 
    где А – арифметическое выражение, 
    В – выражение,  
    Т – терм, 
    М – множитель. 
А – начальный символ грамматики.



Введем конфигурацию алгоритма
	(s, i, α, β) , 
где  s – состояние алгоритма, s ∈ {q, b, t }: 
	q – состояние нормальной работы,
    b – состояние возврата,
    t  - заключительное состояние  	(нормальное завершение);
i – текущее значение указателя входной цепочки ϖ;
α - содержимое стека L1;  
β - содержимое стека L2. 


Стек L1 будет содержать историю проделанных подстановок,  а именно,  индексы альтернатив и прочитанные 
    символы ai,  т.е. α ∈ (I U T)*. 

Стек L2 будет содержать текущую цепочку вывода, так что β1 – активная вершина, β ∈ (T U N)*.